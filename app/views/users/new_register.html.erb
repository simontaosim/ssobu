<%= javascript_include_tag "jquery.md5.js" %>
<div class="container-fluid" style="min-height: 100%;height: 100%">
    <div class="col-sm-14">
        <div class="register_div login_register_div bs-example">
        <%= form_for @user, url: users_register_path, :html => {:class => "form-horizontal group_top", :onsubmit => "return registOnSubmit()" } do |f| %>
           
                <div class="form-group">
                    <label for="input_username" class="col-sm-3 control-label">用户名</label>
                    <div class="col-sm-8" style="position: relative">
                    <%= f.text_field :username, 
                        class: "form-control", 
                        id: "input_username",
                        placeholder: "由5～20个数字或字母组成", 
                        inputtype: "username",
                        onblur: 'checkOnBlur(this)', 
                        onkeyup: 'checkOnKeyUp(this)'  %>
                    </div>
                    <div class="col-sm-offset-4 span tips_username"></div>
                </div>
                <div class="form-group">
                    <label for="input_email" class="col-sm-3 control-label">邮箱</label>
                    <div class="col-sm-8" style="position: relative">
                    <%= f.email_field :email, 
                        class: "form-control", 
                        id: "input_email",
                        placeholder: "someone@example.com", 
                        inputtype: "email",
                        onblur: "checkOnBlur(this)", 
                        onkeyup: "checkOnKeyUp(this)" %>

                    </div>
                    <div class="col-sm-offset-4 span tips_email"></div>
                </div>
                <div class="form-group">
                    <label for="input_pwd" class="col-sm-3 control-label">密码</label>
                    <div class="col-sm-8">
                    <%= f.password_field :password, 
                        class: "form-control", 
                        id: "input_pwd", 
                        placeholder: "由8～20个数字和字母组成", 
                        inputtype: "pwd",
                        onblur: "checkOnBlur(this)", 
                        onkeyup: "checkOnKeyUp(this)" %>
                       
                    </div>
                    <div class="col-sm-offset-4 span tips_pwd"></div>
                </div>
                <div class="form-group">
                    <label for="input_pwd2" class="col-sm-3 control-label">确认密码</label>
                    <div class="col-sm-8">
                    <%= f.password_field :password_confirm, 
                        class: "form-control", 
                        id: "input_pwd2", 
                        placeholder: "确认密码",
                        inputtype: "pwd2", 
                        onblur: "checkOnBlur(this)",
                        onkeyup: "checkOnKeyUp(this)" %>
                    </div>
                    <div class="col-sm-offset-4 span tips_pwd2"></div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-3 col-sm-5">
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" id="checkbox_agree">服务协议
                            </label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-3 col-sm-9">
                        <button type="submit" class="btn btn-default sub_sty" id="btn_regist" style="height: 100%; padding: 7">注 册</button>
                    </div>

                </div>
                

           <% end %>


        </div>
    </div>
</div>
<script>

    var rules = {
        username: /^[0-9A-Za-z]{5,16}$/, 
        pwd: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,20}$/, 
        email: /^(\w)+(\.\w+)*@(\w)+((\.\w{2,3}){1,3})$/
    };

    var inputErrorTips = {
        username: '由5～16个数字或字母组成',
        pwd: '由8～20个数字和字母组成，必须包含数字和字母',
        pwd2: '两次密码输入不相符',
        email: '请输入正确的邮箱'
    };

    var emptyTips = {
        username: '用户名不能为空',
        pwd: '密码不能为空',
        email: '邮箱不能为空'
    };

    var blurErrorTips = {
        username: '由5～26个数字或字母组成',
        pwd: '由8～20个数字和字母组成，必须包含数字和字母',
        pwd2: '两次密码输入不相符',
        email: '邮箱格式不正确'
    };

    var existTips = {
        username: '用户名已存在',
        email: '邮箱已存在',
        unknown: '未知错误'
    };

    var checkExistAddr = {
        username: 'http://uboss.me/users/username_is_exist',
        email: 'http://uboss.me/users/email_is_exist'
    };

    var form = {
        username: '',
        email: '',
        pwd: '',
        pwd2: ''
    };

    var num = 5;

    var tipsDiv = {};

    var validate = {};

    var btnRegist;
    var checkboxAgree;

    $(function(){
        tipsDiv['username'] = $(".tips_username");
        tipsDiv['email'] = $(".tips_email");
        tipsDiv['pwd'] = $(".tips_pwd");
        tipsDiv['pwd2'] = $(".tips_pwd2");
        btnRegist = $("#btn_regist");
        checkboxAgree = $("#checkbox_agree");
        validate["agree"] = checkboxAgree.prop('checked');
        checkAllAndSetBtnRegist();
        checkboxAgree.change(checkBoxOnChange);
    });

    function checkBoxOnChange(){
        validate["agree"] = checkboxAgree.prop('checked');
        checkAllAndSetBtnRegist();
    }

    function checkOnBlur(e){
        var jqElement = $(e);
        var value = jqElement.val();
        var type = jqElement.attr("inputtype");

        //输入为空时
        if (isInputEmpty(value)){
            tryShowTips(emptyTips, type);
            validate[type] = false;
            checkAllAndSetBtnRegist();
            return;
        }

        //输入不合法时
        if (!isInputLegal(value, type)){
            tryShowTips(blurErrorTips, type);
            validate[type] = false;
            checkAllAndSetBtnRegist();
            return;
        }

        hideTips(type);

        switch (type)
        {
            case "username":
            case "email":
                form[type] = value;
                if (checkExist(type)){
                    checkAllAndSetBtnRegist();
                    return;
                }
                break;
            case "pwd":
            case "pwd2":
                form[type] = value;
                if (!checkPwdEquals()){
                    checkAllAndSetBtnRegist();
                    return;
                }
                break;
        }

        hideTips(type);
        validate[type] = true;
        form[type] = value;
        checkAllAndSetBtnRegist();
        return;
    }

    function checkOnKeyUp(e){
        var jqElement = $(e);
        var value = jqElement.val();
        var type = jqElement.attr("inputtype");

        //输入为空
        if (isInputEmpty(value)){
            tryShowTips(emptyTips, type);
            validate[type] = false;
            checkAllAndSetBtnRegist();
            return;
        }

        //输入不合法时
        if (!isInputLegal(value, type)){
            tryShowTips(inputErrorTips, type);
            validate[type] = false;
            checkAllAndSetBtnRegist();
            return;
        }

        //确认密码
        if (type == "pwd" || type == "pwd2"){
            form[type] = value;
            if (!checkPwdEquals()){
                checkAllAndSetBtnRegist();
                return;
            }    
        }

        hideTips(type);
        validate[type] = true;
        checkAllAndSetBtnRegist();
        return;
    }

    function checkExist(type){
        btnRegist.html('<img alt="uboss" width="34px" height="34px" src="/assets/loading2-a58ad9937c8c60f1579b0d599b9f940e.gif">');
        btnRegist.css("padding", 0);
        var validateResult = false;
        var checkData = {};
        checkData[type] = form[type];
        $.ajax({
            type:'get', 
            async:false, 
            url:checkExistAddr[type],
            data:checkData, 
            success:function(data){
                switch (eval(data)){
                    case 0:
                        validate[type] = false;
                        tryShowTips(existTips, type);
                        validateResult = true;
                        break;
                    case 1:
                        validate[type] = true;
                        hideTips(type);
                        validateResult = false;
                        break;
                    default:
                        validate[type] = false;
                        tryShowTips(existTips, "unknown");
                        validateResult = true;
                        break;
                }
            }
        });

        btnRegist.html("注 册");
        btnRegist.css("padding", 7);
        return validateResult;
    }

    function checkPwdEquals(){
        if (form["pwd"] != form["pwd2"] && form["pwd2"] != ""){
            tryShowTips(inputErrorTips, "pwd2");
            validate["pwd2"] = false;
            return false;
        }
        hideTips("pwd2");
        validate["pwd2"] = true;
        return true;
    }

    function checkAllAndSetBtnRegist(){
        if (isAllLegal()){
            btnRegist.disabled = false;
            return;
        }
        btnRegist.disabled = true;
    }

    function isAllLegal(){
        var count = 0;
        for (eachVal in validate){
            if (validate[eachVal] != true){
                return false;
            }
            count++;
        }
        if (count < num){
            return false;
        }
        return true;
    }

    function isInputEmpty(value){
        return value == null || value == "";
    }

    function isInputLegal(value, type){
        if (rules[type] != null){
            return rules[type].test(value);
        }
        return true;
    }

    function tryShowTips(tips, type){
        if (tips[type] != null){
            tipsDiv[type].html(tips[type]);
            tipsDiv[type].show();
            return;
        }
        hideTips(type);
    }

    function hideTips(type){
        tipsDiv[type].hide();
    }

    function registOnSubmit(){
        return null;
    }
</script>
